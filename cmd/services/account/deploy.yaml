apiVersion: v1
kind: ConfigMap
metadata:
  name: account-v1
  labels:
    app: account
data:
  config.yml: |-
    serviceName: Accounts API
    httpPort: 80
    startupSleepSeconds: 5
    logLevel: -1
    security:
      insecure: true
    databases:
    - required: true
      type: sqlDatabase
      address: mysql:3306
      user: onfon
      schema: ussd
      passwordFile: /app/secrets/mysql/mysql-password
      metadata:
        name: sqlWrites
        dialect: mysql
        orm: gorm
    - required: true
      type: sqlDatabase
      address: mysql:3306
      user: onfon
      schema: ussd
      passwordFile: /app/secrets/mysql/mysql-password
      metadata:
        name: sqlReads
        dialect: mysql
        orm: gorm
    - required: true
      type: redisDatabase
      address: redisdb:6379
      metadata:
        name: redisWrites
    - required: true
      type: redisDatabase
      address: redisdb:6379
      metadata:
        name: redisReads
    externalServices:
    - name: messaging
      required: true
      address: messaging:8080
      k8service: true
      insecure: true
---
apiVersion: v1
kind: Service
metadata:
  name: account
  labels:
    app: account
spec:
  selector:
    app: account
  ports:
  - port: 80
    name: http
  - port: 8080
    name: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account
  labels:
    app: account
    version: v1
spec:
  selector:
    matchLabels:
      app: account
      version: v1
  template:
    metadata:
      labels:
        app: account
        version: v1
    spec:
      containers:
      - name: account
        image: gidyon/account:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 8080
          name: grpc
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 15Mi
          limits:
            cpu: 1000m
            memory: 200Mi
        env:
        - name: APP_NAME
          value: EMRS
        - name: TEMPLATES_DIR
          value: /app/templates/
        - name: TOKEN_EXPIRATION_MINUTES
          value: "30"
        - name: ACTIVATION_URL
          value: http://ldaddress/activate 
        - name: MODE
          value: development
        - name: FIREBASE_CREDENTIALS_FILE
          value: /app/secrets/firebase/creds
        - name: API_HASH_KEY
          valueFrom:
            secretKeyRef:
              name: symmetric-keys
              key: api-hash-key
        - name: API_BLOCK_KEY
          valueFrom:
            secretKeyRef:
              name: symmetric-keys
              key: api-block-key
        - name: JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              name: symmetric-keys
              key: jwt-signing-key
        readinessProbe: # Checks that the container is started
          httpGet:
            path: /api/accounts/health/ready
            port: 80
          initialDelaySeconds: 8
          timeoutSeconds: 1
          periodSeconds: 20
          failureThreshold: 3
        livenessProbe: # Checks that the container is running
          httpGet:
            path: /api/accounts/health/live
            port: 80
          initialDelaySeconds: 8
          timeoutSeconds: 1
          periodSeconds: 20
          failureThreshold: 3
        volumeMounts:
        - name: app-config
          mountPath: /app/configs/
          readOnly: true
        - name: mysql-creds
          mountPath: /app/secrets/mysql/
          readOnly: true
        - name: templates
          mountPath: /app/templates/
          readOnly: true
        - name: firebase-credentials
          mountPath: /app/secrets/firebase
          readOnly: true
      volumes:
      - name: app-config
        configMap:
          name: account-v1
      - name: templates
        configMap:
          name: account-templates-v1
      - name: mysql-creds
        secret:
          secretName: mysql
      - name: firebase-credentials
        secret:
          secretName: firebase-credentials

---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "account-hpa"
  labels:
    app: "account"
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "account"
    apiVersion: "apps/v1"
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: "Resource"
    resource:
      name: "cpu"
      targetAverageUtilization: 80