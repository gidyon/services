replicaCount: 1

image: 
  repository: gidyon/channel
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

command: ["what?"]
args:
- dbejbdhwdw=78
- dwjbdjwbdw=dwbd

serviceAccount:
  create: true
  annotations: {}
  # If not set and create is true, a name is generated using the fullname template
  name: "podepdoe"

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

readinessProbe: # Checks that the container is started
  httpGet:
    path: /api/channels/health/ready
    scheme: HTTP
    port: 80
  initialDelaySeconds: 10
  timeoutSeconds: 3
  periodSeconds: 20
  failureThreshold: 3
livenessProbe: # Checks that the container is running
  httpGet:
    path: /api/channels/health/live
    scheme: HTTP
    port: 80
  initialDelaySeconds: 10
  timeoutSeconds: 3
  periodSeconds: 20
  failureThreshold: 3

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 12Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 50
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Existing secrets and configmaps
existingSecrets:
  mySqlCredentials: "mysql-creds"
  firebaseCredentials: "firebase-creds"
  symmetricKeysCredentials: "symmetric-keys"

# extraEnv contains environment variables apart from default one
extraEnv:
  - name: APP_NAME
    value: EMRS
  - name: TEMPLATES_DIR
    value: /app/templates/
  - name: ACTIVATION_URL
    value: https://ldaddress/activate 
  - name: MODE
    value: development

# extraVolume contains volumes other than default one
extraVolume:
  - name: mysql-creds
    mountPath: /app/secrets/mysql/
    readOnly: true
  - name: templates
    mountPath: /app/templates/
    readOnly: true

# extraVolumeMount is volumne mounts for extra volumes
extraVolumeMount:
  - name: templates
    configMap:
      name: account-templates-v1
  - name: mysql-creds
    secret:
      secretName: mysql-creds

# Service configuration
config:
  serviceName: "CHANNEL API"
  serviceType: ClusterIP
  httpPort: 80
  grpcPort: 8080
  startupSleepSeconds: 10
  logging:
    level: -1
    timeFormat: 2006-01-02T15:04:05Z07:00
  security:
    tlsKey: ""
    tlsCert: ""
    serverName: ""
    insecure: true
  databases:
  - required: true
    type: sqlDatabase
    address: mysql:3306
    user: onfon
    schema: ussd
    passwordFile: /app/secrets/mysql/mysql-password
    metadata:
      name: mysqlWrites
      dialect: mysql
      orm: gorm
  - required: true
    type: sqlDatabase
    address: mysql:3306
    user: onfon
    schema: ussd
    passwordFile: /app/secrets/mysql/mysql-password
    metadata:
      name: mysqlReads
      dialect: mysql
      orm: gorm
  - required: true
    type: redisDatabase
    address: localhost:6379
    metadata:
      name: redisWrites
  - required: true
    type: redisDatabase
    address: localhost:6379
    metadata:
      name: redisReads
  externalServices:
  - name: ussdchannel
    required: true
    address: ussdchannel:80
    k8service: true
    insecure: true
  - name: ussdlog
    required: true
    address: ussdlog:80
    k8service: true
    insecure: true