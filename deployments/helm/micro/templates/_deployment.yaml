{{- define "micro.deployment.tpl" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "micro.fullname" . }}
  labels:
    {{- include "micro.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "micro.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "micro.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "micro.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.podSecurityContext }}
        securityContext:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
          - name: http
            containerPort: {{ .Values.config.httpPort }}
            protocol: TCP
          - name: grpc
            containerPort: {{ .Values.config.grpcPort }}
            protocol: TCP
        {{- with .Values.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        - name: API_HASH_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existing.secrets.symmetricKeysCredentials }}
              key: api-hash-key
        - name: API_BLOCK_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existing.secrets.symmetricKeysCredentials }}
              key: api-block-key
        - name: JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existing.secrets.symmetricKeysCredentials }}
              key: jwt-signing-key
        volumeMounts:
        - name: app-config
          mountPath: /app/configs/
          readOnly: true
      volumes:
      - name: app-config
        configMap:
          name: {{ include "micro.fullname" . }}
{{- end -}}
{{- define "micro.deployment" -}}
{{- include "micro.util.merge" (append . "micro.deployment.tpl") -}}
{{- end -}}