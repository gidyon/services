{
  "swagger": "2.0",
  "info": {
    "title": "Accounts/Customer/Auth Service",
    "description": "API for managing user/customers accounts and managing authentication",
    "version": "v1",
    "contact": {
      "name": "Github \u003cGideon Kamau\u003e",
      "url": "https://github.com/gidyon/services/blob/master/api/proto/account.proto",
      "email": "gideonhacer@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/gidyon/services/blob/master/LICENSE"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/accounts": {
      "get": {
        "summary": "Fetches collection of accounts",
        "operationId": "AccountAPI_ListAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisAccounts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "listCriteria.filter",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "listCriteria.showActiveAccounts",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "listCriteria.showInactiveAccounts",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "listCriteria.showBlockedAccounts",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "listCriteria.showMales",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "listCriteria.showFemales",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "listCriteria.filterCreationDate",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "listCriteria.createdFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "listCriteria.createdUntil",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "listCriteria.filterAccountGroups",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "listCriteria.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "listCriteria.projectIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "view",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FULL_VIEW",
              "LIST_VIEW",
              "SEARCH_VIEW",
              "BASIC_VIEW"
            ],
            "default": "FULL_VIEW"
          },
          {
            "name": "priviledge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      },
      "post": {
        "summary": "Creates an account for a user",
        "description": "Required information is names, email or phone, (under account field) and project_id. If users will need/use password, pass it in the private_account field",
        "operationId": "AccountAPI_CreateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisCreateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisCreateAccountRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts/action/login": {
      "post": {
        "summary": "Sign in using username and password",
        "description": "Sign in user using username, password and project_id they belong to",
        "operationId": "AccountAPI_SignIn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisSignInResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisSignInRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts/action/login-external": {
      "post": {
        "summary": "Sign in using external auth provider like Google, FB.",
        "description": "Signing in using external auth providers requires necessary permission and credential data retrieved and set with the auth providers",
        "operationId": "AccountAPI_SignInExternal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisSignInResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisSignInExternalRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts/action/refresh-session": {
      "get": {
        "summary": "Refresh jwt",
        "description": "Refreshes jwt since it expires after 30 minutes. Pass the refresh token, account id and account group to retrieve the new jwt",
        "operationId": "AccountAPI_RefreshSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisSignInResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "refreshToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountGroup",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts/action/request-change-private-account": {
      "get": {
        "summary": "Request token to update password",
        "description": "This will send a reset link to the email address provided or OTP if phone number was used. The jwt returned is to be pass inside request body updating private account information (passwords or security data). Default bearer token should be passed as authorization",
        "operationId": "AccountAPI_RequestChangePrivateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisRequestChangePrivateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "payload",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fallbackUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sendMethod",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SEND_METHOD_UNSPECIFIED",
              "EMAIL",
              "SMSV2",
              "CALL",
              "PUSH"
            ],
            "default": "SEND_METHOD_UNSPECIFIED"
          },
          {
            "name": "sender.emailSender",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sender.displayName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sender.appName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "smsAuth.apiUrl",
            "description": "[sms_url, sender_id, api_key, client_id, auth_token, access_key, cookies].",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "smsAuth.senderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "smsAuth.apiKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "smsAuth.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "smsAuth.authToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "smsAuth.accessKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "smsAuth.appName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts/action/request-otp": {
      "post": {
        "summary": "Request sign in using mobile OTP code (Implemented as 2FA)",
        "description": "Will send OTP to the account associated phone number, they will use the OTP to sign.",
        "operationId": "AccountAPI_RequestSignInOTP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisRequestSignInOTPRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts/action/search": {
      "get": {
        "summary": "Searches accounts and linked accounts",
        "operationId": "AccountAPI_SearchAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisAccounts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchLinkedAccounts",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchCriteria.filter",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchCriteria.showActiveAccounts",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchCriteria.showInactiveAccounts",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchCriteria.showBlockedAccounts",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchCriteria.showMales",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchCriteria.showFemales",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchCriteria.filterCreationDate",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchCriteria.createdFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "searchCriteria.createdUntil",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "searchCriteria.filterAccountGroups",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchCriteria.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "searchCriteria.projectIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "view",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FULL_VIEW",
              "LIST_VIEW",
              "SEARCH_VIEW",
              "BASIC_VIEW"
            ],
            "default": "FULL_VIEW"
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts/action/sign-in-otp": {
      "post": {
        "summary": "Sign in using the OTP provided",
        "description": "Pass the OTP in RequestSignInOTP to sign in to the account",
        "operationId": "AccountAPI_SignInOTP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisSignInResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisSignInOTPRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts/action/update-private-account": {
      "patch": {
        "summary": "Updates a user private account information while not logged in to the account",
        "operationId": "AccountAPI_UpdatePrivateAccountExternal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisUpdatePrivateAccountExternalRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts/{account.accountId}": {
      "patch": {
        "summary": "Updates a user account",
        "operationId": "AccountAPI_UpdateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account.accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisUpdateAccountRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts/{accountId}": {
      "get": {
        "summary": "Retrieves a user account",
        "operationId": "AccountAPI_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "view",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FULL_VIEW",
              "LIST_VIEW",
              "SEARCH_VIEW",
              "BASIC_VIEW"
            ],
            "default": "FULL_VIEW"
          },
          {
            "name": "priviledge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      },
      "delete": {
        "summary": "Deletes a user account",
        "operationId": "AccountAPI_DeleteAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts/{accountId}/action/activate-account": {
      "get": {
        "summary": "Activate the account",
        "description": "Changes the status of the account to ACTIVE, only done by administrators group",
        "operationId": "AccountAPI_ActivateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisActivateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otp",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts/{accountId}/action/update-private-account": {
      "patch": {
        "summary": "Updates a user private account information",
        "operationId": "AccountAPI_UpdatePrivateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisUpdatePrivateAccountRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:activateAccount": {
      "post": {
        "summary": "Activate the account",
        "description": "Changes the status of the account to ACTIVE, only done by administrators group",
        "operationId": "AccountAPI_ActivateAccount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisActivateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisActivateAccountRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:activateAccountOTP": {
      "post": {
        "summary": "Activate/Verify the account",
        "description": "Verifies/Activates user account using OTP gotten from RequestActivateAccountOTP call",
        "operationId": "AccountAPI_ActivateAccountOTP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisActivateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisActivateAccountOTPRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:adminUpdateAccount": {
      "post": {
        "summary": "Updates account",
        "operationId": "AccountAPI_AdminUpdateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisAdminUpdateAccountRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:batchGetAccounts": {
      "post": {
        "summary": "Retrieves multiple user accounts",
        "operationId": "AccountAPI_BatchGetAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisBatchGetAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisBatchGetAccountsRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:existAccount": {
      "post": {
        "summary": "Checks if an account exists",
        "operationId": "AccountAPI_ExistAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisExistAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisExistAccountRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:getLinkedAccounts": {
      "post": {
        "summary": "Retrieves deeply linked accounts",
        "operationId": "AccountAPI_GetLinkedAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisGetLinkedAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisGetLinkedAccountsRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:listAccounts": {
      "post": {
        "summary": "Fetches collection of accounts",
        "operationId": "AccountAPI_ListAccounts2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisAccounts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisListAccountsRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:refreshSession": {
      "post": {
        "summary": "Refresh jwt",
        "description": "Refreshes jwt since it expires after 30 minutes. Pass the refresh token, account id and account group to retrieve the new jwt",
        "operationId": "AccountAPI_RefreshSession2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisSignInResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisRefreshSessionRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:requestActivateAccountOTP": {
      "post": {
        "summary": "Request for OTP to activate an account",
        "description": "Request OTP to verify and activate their account, this happens after user has created an account and it is inactive. They will use the OTP to activate their account",
        "operationId": "AccountAPI_RequestActivateAccountOTP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisRequestActivateAccountOTPRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:requestChangePrivateAccount": {
      "post": {
        "summary": "Request token to update password",
        "description": "This will send a reset link to the email address provided or OTP if phone number was used. The jwt returned is to be pass inside request body updating private account information (passwords or security data). Default bearer token should be passed as authorization",
        "operationId": "AccountAPI_RequestChangePrivateAccount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisRequestChangePrivateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisRequestChangePrivateAccountRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:requestSignInOTP": {
      "post": {
        "summary": "Request sign in using mobile OTP code (Implemented as 2FA)",
        "description": "Will send OTP to the account associated phone number, they will use the OTP to sign.",
        "operationId": "AccountAPI_RequestSignInOTP2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisRequestSignInOTPRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:searchAccounts": {
      "post": {
        "summary": "Searches accounts and linked accounts",
        "operationId": "AccountAPI_SearchAccounts2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisAccounts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisSearchAccountsRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:signIn": {
      "post": {
        "summary": "Sign in using username and password",
        "description": "Sign in user using username, password and project_id they belong to",
        "operationId": "AccountAPI_SignIn2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisSignInResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisSignInRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:signInExternal": {
      "post": {
        "summary": "Sign in using external auth provider like Google, FB.",
        "description": "Signing in using external auth providers requires necessary permission and credential data retrieved and set with the auth providers",
        "operationId": "AccountAPI_SignInExternal2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisSignInResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisSignInExternalRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:signInOTP": {
      "post": {
        "summary": "Sign in using the OTP provided",
        "description": "Pass the OTP in RequestSignInOTP to sign in to the account",
        "operationId": "AccountAPI_SignInOTP2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisSignInResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisSignInOTPRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:updatePrivateAccount": {
      "post": {
        "summary": "Updates a user private account information",
        "operationId": "AccountAPI_UpdatePrivateAccount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisUpdatePrivateAccountRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    },
    "/api/accounts:updatePrivateAccountExternal": {
      "post": {
        "summary": "Updates a user private account information while not logged in to the account",
        "operationId": "AccountAPI_UpdatePrivateAccountExternal2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisUpdatePrivateAccountExternalRequest"
            }
          }
        ],
        "tags": [
          "AccountAPI"
        ]
      }
    }
  },
  "definitions": {
    "AccountGender": {
      "type": "string",
      "enum": [
        "GENDER_UNSPECIFIED",
        "MALE",
        "FEMALE"
      ],
      "default": "GENDER_UNSPECIFIED",
      "title": "Gendern of the account"
    },
    "SendSMSRequestCookie": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "SendSMSRequestSMSAuth": {
      "type": "object",
      "properties": {
        "apiUrl": {
          "type": "string",
          "title": "[sms_url, sender_id, api_key, client_id, auth_token, access_key, cookies]"
        },
        "senderId": {
          "type": "string"
        },
        "apiKey": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "authToken": {
          "type": "string"
        },
        "accessKey": {
          "type": "string"
        },
        "cookies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SendSMSRequestCookie"
          }
        },
        "appName": {
          "type": "string"
        }
      }
    },
    "apisAccount": {
      "type": "object",
      "example": {
        "email": "gkamai@onfonmedia.com",
        "phone": "xxxx",
        "names": "Full Names",
        "birth_date": "Feb 03 1990",
        "gender": "MALE",
        "nationality": "Kenyan",
        "group": "SUPER_ADMIN"
      },
      "properties": {
        "accountId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "deviceToken": {
          "type": "string"
        },
        "names": {
          "type": "string"
        },
        "birthDate": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/AccountGender"
        },
        "nationality": {
          "type": "string"
        },
        "idNumber": {
          "type": "string"
        },
        "profession": {
          "type": "string"
        },
        "residence": {
          "type": "string"
        },
        "profileUrl": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "linkedAccounts": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/apisAccountState"
        },
        "secondaryGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Account profile information",
      "title": "Account"
    },
    "apisAccountState": {
      "type": "string",
      "enum": [
        "ACCOUNT_STATE_UNSPECIFIED",
        "BLOCKED",
        "ACTIVE",
        "INACTIVE",
        "DELETED"
      ],
      "default": "ACCOUNT_STATE_UNSPECIFIED",
      "title": "AccountState"
    },
    "apisAccountView": {
      "type": "string",
      "enum": [
        "FULL_VIEW",
        "LIST_VIEW",
        "SEARCH_VIEW",
        "BASIC_VIEW"
      ],
      "default": "FULL_VIEW",
      "title": "AccountView"
    },
    "apisAccounts": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisAccount"
          }
        },
        "collectionCount": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Collection of accounts",
      "title": "Accounts"
    },
    "apisActivateAccountOTPRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        }
      },
      "description": "Request to activate an account",
      "title": "ActivateAccountOTPRequest"
    },
    "apisActivateAccountRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        }
      },
      "description": "Request to activate an account that was inactive",
      "title": "ActivateAccountRequest",
      "required": [
        "account_id",
        "token"
      ]
    },
    "apisActivateAccountResponse": {
      "type": "object",
      "description": "Response after activating an account",
      "title": "ActivateAccountResponse"
    },
    "apisAdminUpdateAccountRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "adminId": {
          "type": "string"
        },
        "updateOperation": {
          "$ref": "#/definitions/apisUpdateOperation"
        },
        "reason": {
          "type": "string"
        },
        "payload": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notify": {
          "type": "boolean"
        },
        "sendMethod": {
          "$ref": "#/definitions/apisSendMethod"
        },
        "sender": {
          "$ref": "#/definitions/apisEmailSender"
        },
        "smsAuth": {
          "$ref": "#/definitions/SendSMSRequestSMSAuth"
        }
      },
      "description": "Request to update an account data by admininstrator",
      "title": "AdminUpdateAccountRequest",
      "required": [
        "account_id",
        "admin_id",
        "update_operation"
      ]
    },
    "apisBatchGetAccountsRequest": {
      "type": "object",
      "properties": {
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request to get multiple accounts",
      "title": "BatchGetAccountsRequest",
      "required": [
        "account_ids"
      ]
    },
    "apisBatchGetAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisAccount"
          }
        }
      },
      "title": "BatchGetAccountsResponse"
    },
    "apisCreateAccountRequest": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/apisAccount"
        },
        "privateAccount": {
          "$ref": "#/definitions/apisPrivateAccount"
        },
        "notify": {
          "type": "boolean"
        },
        "updateOnly": {
          "type": "boolean"
        },
        "byAdmin": {
          "type": "boolean"
        },
        "adminId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "notificationMethod": {
          "$ref": "#/definitions/apisSendMethod"
        },
        "sender": {
          "$ref": "#/definitions/apisEmailSender"
        },
        "smsAuth": {
          "$ref": "#/definitions/SendSMSRequestSMSAuth"
        }
      },
      "description": "Request to create an account",
      "title": "CreateAccountRequest",
      "required": [
        "account"
      ]
    },
    "apisCreateAccountResponse": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        }
      },
      "description": "Response after creating an account",
      "title": "CreateAccountResponse"
    },
    "apisCriteria": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "boolean"
        },
        "showActiveAccounts": {
          "type": "boolean"
        },
        "showInactiveAccounts": {
          "type": "boolean"
        },
        "showBlockedAccounts": {
          "type": "boolean"
        },
        "showMales": {
          "type": "boolean"
        },
        "showFemales": {
          "type": "boolean"
        },
        "filterCreationDate": {
          "type": "boolean"
        },
        "createdFrom": {
          "type": "string",
          "format": "int64"
        },
        "createdUntil": {
          "type": "string",
          "format": "int64"
        },
        "filterAccountGroups": {
          "type": "boolean"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "projectIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Filtering criteria for fetching collection of accounts",
      "title": "Criteria"
    },
    "apisEmailSender": {
      "type": "object",
      "properties": {
        "emailSender": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        }
      },
      "description": "Sender information for email",
      "title": "EmailSender"
    },
    "apisExistAccountRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        }
      },
      "description": "Request to check if an account exists",
      "title": "ExistAccountRequest"
    },
    "apisExistAccountResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        },
        "accountId": {
          "type": "string"
        },
        "existingFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ExistAccountResponse"
    },
    "apisGetLinkedAccountsRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        }
      },
      "description": "Request to retrive linked accounts for an account",
      "title": "GetLinkedAccountsRequest",
      "required": [
        "account_id"
      ]
    },
    "apisGetLinkedAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisAccount"
          }
        }
      },
      "description": "Response containing linked accounts",
      "title": "GetLinkedAccountsResponse"
    },
    "apisListAccountsRequest": {
      "type": "object",
      "properties": {
        "pageToken": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "listCriteria": {
          "$ref": "#/definitions/apisCriteria"
        },
        "view": {
          "$ref": "#/definitions/apisAccountView"
        },
        "priviledge": {
          "type": "boolean"
        }
      },
      "description": "Request to retrieve collection of accounts",
      "title": "ListAccountsRequest"
    },
    "apisPrivateAccount": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        },
        "securityQuestion": {
          "type": "string"
        },
        "securityAnswer": {
          "type": "string"
        }
      },
      "description": "Contains account sensitive information such as password and security QA",
      "title": "PrivateAccount"
    },
    "apisRefreshSessionRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "accountGroup": {
          "type": "string"
        }
      },
      "description": "Request to refresh session credential",
      "title": "RefreshSessionRequest",
      "required": [
        "refresh_token",
        "account_id"
      ]
    },
    "apisRequestActivateAccountOTPRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "smsAuth": {
          "$ref": "#/definitions/SendSMSRequestSMSAuth"
        }
      },
      "description": "Request to send OTP for activating an account",
      "title": "RequestActivateAccountOTPRequest"
    },
    "apisRequestChangePrivateAccountRequest": {
      "type": "object",
      "properties": {
        "payload": {
          "type": "string"
        },
        "fallbackUrl": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "sendMethod": {
          "$ref": "#/definitions/apisSendMethod"
        },
        "sender": {
          "$ref": "#/definitions/apisEmailSender"
        },
        "smsAuth": {
          "$ref": "#/definitions/SendSMSRequestSMSAuth"
        }
      },
      "description": "Request to change private account information",
      "title": "RequestChangePrivateAccountRequest",
      "required": [
        "payload",
        "fallback_url",
        "project",
        "send_method"
      ]
    },
    "apisRequestChangePrivateAccountResponse": {
      "type": "object",
      "properties": {
        "responseMessage": {
          "type": "string"
        },
        "jwt": {
          "type": "string"
        }
      },
      "description": "Response after requesting for the change",
      "title": "RequestChangePrivateAccountResponse"
    },
    "apisRequestSignInOTPRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "smsAuth": {
          "$ref": "#/definitions/SendSMSRequestSMSAuth"
        }
      },
      "description": "Request request to sign in",
      "title": "RequestSignInOTPRequest"
    },
    "apisSearchAccountsRequest": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "pageToken": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "searchLinkedAccounts": {
          "type": "boolean"
        },
        "searchCriteria": {
          "$ref": "#/definitions/apisCriteria"
        },
        "view": {
          "$ref": "#/definitions/apisAccountView"
        }
      },
      "description": "Request to search for accounts",
      "title": "SearchAccountsRequest"
    },
    "apisSendMethod": {
      "type": "string",
      "enum": [
        "SEND_METHOD_UNSPECIFIED",
        "EMAIL",
        "SMSV2",
        "CALL",
        "PUSH"
      ],
      "default": "SEND_METHOD_UNSPECIFIED",
      "title": "SendMethod"
    },
    "apisSignInExternalRequest": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/apisAccount"
        },
        "authToken": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        }
      },
      "description": "Request to sign in using an external provider like Google, Facebook or Github",
      "title": "SignInExternalRequest",
      "required": [
        "account",
        "auth_token"
      ]
    },
    "apisSignInOTPRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        },
        "group": {
          "type": "string"
        }
      },
      "description": "Request to sign in using OTP",
      "title": "SignInOTPRequest"
    },
    "apisSignInRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        }
      },
      "description": "Request to sign in to an account",
      "title": "SignInRequest",
      "required": [
        "username",
        "password"
      ]
    },
    "apisSignInResponse": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/apisAccountState"
        },
        "secondaryGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response after signing in",
      "title": "SignInResponse"
    },
    "apisUpdateAccountRequest": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/apisAccount"
        }
      },
      "description": "Request to update an account",
      "title": "UpdateAccountRequest",
      "required": [
        "account"
      ]
    },
    "apisUpdateOperation": {
      "type": "string",
      "enum": [
        "UPDATE_OPERATION_INSPECIFIED",
        "UNDELETE",
        "DELETE",
        "UNBLOCK",
        "BLOCK",
        "CHANGE_GROUP",
        "ADMIN_ACTIVATE",
        "PASSWORD_RESET"
      ],
      "default": "UPDATE_OPERATION_INSPECIFIED",
      "title": "UpdateOperation"
    },
    "apisUpdatePrivateAccountExternalRequest": {
      "type": "object",
      "properties": {
        "jwt": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "privateAccount": {
          "$ref": "#/definitions/apisPrivateAccount"
        },
        "changeToken": {
          "type": "string"
        }
      },
      "description": "Request to update account private information from external source",
      "title": "UpdatePrivateAccountExternalRequest",
      "required": [
        "account_id",
        "private_account",
        "change_token"
      ]
    },
    "apisUpdatePrivateAccountRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "privateAccount": {
          "$ref": "#/definitions/apisPrivateAccount"
        },
        "changeToken": {
          "type": "string"
        }
      },
      "description": "Request to update account private information",
      "title": "UpdatePrivateAccountRequest",
      "required": [
        "account_id",
        "private_account",
        "change_token"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
