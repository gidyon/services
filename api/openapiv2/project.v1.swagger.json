{
  "swagger": "2.0",
  "info": {
    "title": "Projects API",
    "description": "API for managing projects, project members and project/member scopes",
    "version": "v1",
    "contact": {
      "name": "Github \u003cGideon Kamau\u003e",
      "url": "https://github.com/gidyon/services/blob/master/api/proto/project/v1.proto",
      "email": "gideonhacer@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/gidyon/services/blob/master/LICENSE"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/{name=projects/*/members/*}": {
      "delete": {
        "summary": "Removes member from project",
        "operationId": "ProjectAPI_DeleteProjectMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectAPI"
        ]
      }
    },
    "/v1/{name=projects/*}": {
      "get": {
        "summary": "Retrieves information about a project",
        "operationId": "ProjectAPI_GetProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectAPI"
        ]
      },
      "delete": {
        "summary": "Removes a project",
        "operationId": "ProjectAPI_DeleteProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ProjectAPI"
        ]
      }
    },
    "/v1/{parent=projects/*/members}": {
      "get": {
        "summary": "Fetches a collection of project members",
        "operationId": "ProjectAPI_ListProjectMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListProjectMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.createdFromTimestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filter.createdUntilTimestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filter.statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProjectAPI"
        ]
      },
      "post": {
        "summary": "Add a member into the project",
        "operationId": "ProjectAPI_CreateProjectMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ProjectMember"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProjectMemberRequest"
            }
          }
        ],
        "tags": [
          "ProjectAPI"
        ]
      }
    },
    "/v1/{parent=projects}": {
      "get": {
        "summary": "Fetches a collection of project resource",
        "operationId": "ProjectAPI_ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.createdFromTimestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filter.createdUntilTimestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filter.ownerIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProjectAPI"
        ]
      },
      "post": {
        "summary": "Creates a new project",
        "operationId": "ProjectAPI_CreateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProjectRequest"
            }
          }
        ],
        "tags": [
          "ProjectAPI"
        ]
      }
    },
    "/v1/{project.name=projects/*}": {
      "patch": {
        "summary": "Updates a project (use this to update project scopes)",
        "operationId": "ProjectAPI_UpdateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProjectRequest"
            }
          }
        ],
        "tags": [
          "ProjectAPI"
        ]
      }
    },
    "/v1/{projectMember.name=projects/*/members/*}": {
      "patch": {
        "summary": "Updates a project member (use this to update member scopes)",
        "operationId": "ProjectAPI_UpdateProjectMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ProjectMember"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectMember.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProjectMemberRequest"
            }
          }
        ],
        "tags": [
          "ProjectAPI"
        ]
      }
    }
  },
  "definitions": {
    "CreateProjectMemberRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "projectMember": {
          "$ref": "#/definitions/ProjectMember"
        }
      }
    },
    "CreateProjectRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "ListProjectMembersResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "projectMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectMember"
          }
        },
        "collectionCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListProjectsFilter": {
      "type": "object",
      "properties": {
        "createdFromTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "createdUntilTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "ownerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statuses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListProjectsMemberFilter": {
      "type": "object",
      "properties": {
        "createdFromTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "createdUntilTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "statuses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListProjectsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project"
          }
        },
        "collectionCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "ownerEmail": {
          "type": "string"
        },
        "ownerNames": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectScope"
          }
        },
        "createDate": {
          "type": "string"
        }
      }
    },
    "ProjectMember": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "memberId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "joinDate": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectScope"
          }
        }
      }
    },
    "ProjectScope": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string"
        },
        "read": {
          "type": "boolean"
        },
        "write": {
          "type": "boolean"
        }
      }
    },
    "UpdateProjectMemberRequest": {
      "type": "object",
      "properties": {
        "projectMember": {
          "$ref": "#/definitions/ProjectMember"
        }
      }
    },
    "UpdateProjectRequest": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
