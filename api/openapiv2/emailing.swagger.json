{
  "swagger": "2.0",
  "info": {
    "title": "Emailing API",
    "description": "Sends emails to client(s)",
    "version": "v1",
    "contact": {
      "name": "Github \u003cGideon Kamau\u003e",
      "url": "https://github.com/gidyon/services/blob/master/api/proto/messaging/emailing.proto",
      "email": "gideonhacer@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/gidyon/services/blob/master/LICENSE"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/emailing:sendEmail": {
      "get": {
        "summary": "Sends email",
        "operationId": "Emailing_SendEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email.destinations",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "email.from",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email.displayName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email.subject",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email.body",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email.bodyContentType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Emailing"
        ]
      }
    }
  },
  "definitions": {
    "apisAttachemnt": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "filenameOverride": {
          "type": "string"
        },
        "ctype": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Attachment contained in the body of the email",
      "title": "Attachemnt"
    },
    "apisEmail": {
      "type": "object",
      "properties": {
        "destinations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "from": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "bodyContentType": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisAttachemnt"
          }
        }
      },
      "description": "Email message to be delivered",
      "title": "Email",
      "required": [
        "destinations"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
